// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class CaptainJackIdentityPublicProfileTypeQueryBuilder : GraphQlQueryBuilder<CaptainJackIdentityPublicProfileTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "captainJackIdentityId", IsComplex = true },
                new FieldMetadata { Name = "name" },
                new FieldMetadata { Name = "twitter" },
                new FieldMetadata { Name = "facebook" },
                new FieldMetadata { Name = "twitch" },
                new FieldMetadata { Name = "youTube" },
                new FieldMetadata { Name = "isAdmin" },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(SteamAccountTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "CaptainJackIdentityPublicProfileType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithCaptainJackIdentityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("captainJackIdentityId", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptCaptainJackIdentityId()
        {
            return ExceptField("captainJackIdentityId");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithTwitter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("twitter", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptTwitter()
        {
            return ExceptField("twitter");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithFacebook(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("facebook", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptFacebook()
        {
            return ExceptField("facebook");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithTwitch(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("twitch", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptTwitch()
        {
            return ExceptField("twitch");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithYouTube(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("youTube", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptYouTube()
        {
            return ExceptField("youTube");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithIsAdmin(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isAdmin", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptIsAdmin()
        {
            return ExceptField("isAdmin");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder WithSteamAccount(SteamAccountTypeQueryBuilder steamAccountTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, steamAccountTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPublicProfileTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }
    }
}
