// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueTableHeroTypeQueryBuilder : GraphQlQueryBuilder<LeagueTableHeroTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "overview", IsComplex = true, QueryBuilderType = typeof(LeagueTableHeroOverviewTypeQueryBuilder) },
                new FieldMetadata { Name = "stats", IsComplex = true, QueryBuilderType = typeof(LeagueTableHeroStatsTypeQueryBuilder) },
                new FieldMetadata { Name = "heroes", IsComplex = true, QueryBuilderType = typeof(LeagueTableHeroPlayersObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "lanes", IsComplex = true, QueryBuilderType = typeof(LeagueTableHeroLanesObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "LeagueTableHeroType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueTableHeroTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public LeagueTableHeroTypeQueryBuilder WithOverview(LeagueTableHeroOverviewTypeQueryBuilder leagueTableHeroOverviewTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("overview", alias, leagueTableHeroOverviewTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroTypeQueryBuilder ExceptOverview()
        {
            return ExceptField("overview");
        }

        public LeagueTableHeroTypeQueryBuilder WithStats(LeagueTableHeroStatsTypeQueryBuilder leagueTableHeroStatsTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("stats", alias, leagueTableHeroStatsTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroTypeQueryBuilder ExceptStats()
        {
            return ExceptField("stats");
        }

        public LeagueTableHeroTypeQueryBuilder WithHeroes(LeagueTableHeroPlayersObjectTypeQueryBuilder leagueTableHeroPlayersObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("heroes", alias, leagueTableHeroPlayersObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroTypeQueryBuilder ExceptHeroes()
        {
            return ExceptField("heroes");
        }

        public LeagueTableHeroTypeQueryBuilder WithLanes(LeagueTableHeroLanesObjectTypeQueryBuilder leagueTableHeroLanesObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("lanes", alias, leagueTableHeroLanesObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroTypeQueryBuilder ExceptLanes()
        {
            return ExceptField("lanes");
        }
    }
}
