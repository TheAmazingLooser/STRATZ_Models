// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class UpdateMatchReplayUploadObjectType : IGraphQlInputObject
    {
        private InputPropertyInfo _matchReplayUploadTeamId;
        private InputPropertyInfo _matchId;
        private InputPropertyInfo _leagueId;
        private InputPropertyInfo _radiantTeamId;
        private InputPropertyInfo _direTeamId;
        private InputPropertyInfo _isActive;
        private InputPropertyInfo _notes;
        private InputPropertyInfo _players;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> MatchReplayUploadTeamId
        {
            get { return (QueryBuilderParameter<long?>)_matchReplayUploadTeamId.Value; }
            set { _matchReplayUploadTeamId = new InputPropertyInfo { Name = "matchReplayUploadTeamId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> MatchId
        {
            get { return (QueryBuilderParameter<long?>)_matchId.Value; }
            set { _matchId = new InputPropertyInfo { Name = "matchId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> LeagueId
        {
            get { return (QueryBuilderParameter<long?>)_leagueId.Value; }
            set { _leagueId = new InputPropertyInfo { Name = "leagueId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> RadiantTeamId
        {
            get { return (QueryBuilderParameter<long?>)_radiantTeamId.Value; }
            set { _radiantTeamId = new InputPropertyInfo { Name = "radiantTeamId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> DireTeamId
        {
            get { return (QueryBuilderParameter<long?>)_direTeamId.Value; }
            set { _direTeamId = new InputPropertyInfo { Name = "direTeamId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> IsActive
        {
            get { return (QueryBuilderParameter<bool?>)_isActive.Value; }
            set { _isActive = new InputPropertyInfo { Name = "isActive", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Notes
        {
            get { return (QueryBuilderParameter<string>)_notes.Value; }
            set { _notes = new InputPropertyInfo { Name = "notes", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<IList<UpdateMatchReplayMatchUploadPlayerObjectType>>))]
        #endif
        public QueryBuilderParameter<IList<UpdateMatchReplayMatchUploadPlayerObjectType>> Players
        {
            get { return (QueryBuilderParameter<IList<UpdateMatchReplayMatchUploadPlayerObjectType>>)_players.Value; }
            set { _players = new InputPropertyInfo { Name = "players", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_matchReplayUploadTeamId.Name != null) yield return _matchReplayUploadTeamId;
            if (_matchId.Name != null) yield return _matchId;
            if (_leagueId.Name != null) yield return _leagueId;
            if (_radiantTeamId.Name != null) yield return _radiantTeamId;
            if (_direTeamId.Name != null) yield return _direTeamId;
            if (_isActive.Name != null) yield return _isActive;
            if (_notes.Name != null) yield return _notes;
            if (_players.Name != null) yield return _players;
        }
    }
}
