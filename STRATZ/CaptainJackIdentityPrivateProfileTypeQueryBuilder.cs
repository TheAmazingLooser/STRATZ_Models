// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class CaptainJackIdentityPrivateProfileTypeQueryBuilder : GraphQlQueryBuilder<CaptainJackIdentityPrivateProfileTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "captainJackIdentityId", IsComplex = true },
                new FieldMetadata { Name = "name" },
                new FieldMetadata { Name = "email" },
                new FieldMetadata { Name = "twitter" },
                new FieldMetadata { Name = "facebook" },
                new FieldMetadata { Name = "twitch" },
                new FieldMetadata { Name = "youTube" },
                new FieldMetadata { Name = "premiumEndDate", IsComplex = true },
                new FieldMetadata { Name = "isAdmin" },
                new FieldMetadata { Name = "feedLevel", IsComplex = true },
                new FieldMetadata { Name = "emailLevel", IsComplex = true },
                new FieldMetadata { Name = "dailyEmail" },
                new FieldMetadata { Name = "weeklyEmail" },
                new FieldMetadata { Name = "monthlyEmail" },
                new FieldMetadata { Name = "proCircuitFeedLevel", IsComplex = true },
                new FieldMetadata { Name = "proCircuitEmailLevel", IsComplex = true },
                new FieldMetadata { Name = "themeType", IsComplex = true },
                new FieldMetadata { Name = "languageId", IsComplex = true },
                new FieldMetadata { Name = "emailValidationCode" },
                new FieldMetadata { Name = "isEmailValidated" },
                new FieldMetadata { Name = "emailHour", IsComplex = true },
                new FieldMetadata { Name = "lastReadFeedTime", IsComplex = true },
                new FieldMetadata { Name = "lastDailyEmail", IsComplex = true },
                new FieldMetadata { Name = "lastWeeklyEmail", IsComplex = true },
                new FieldMetadata { Name = "lastMonthlyEmail", IsComplex = true },
                new FieldMetadata { Name = "lastLeagueDailyEmail", IsComplex = true },
                new FieldMetadata { Name = "lastTeamDailyEmail", IsComplex = true },
                new FieldMetadata { Name = "lastProCircuitDailyEmail", IsComplex = true },
                new FieldMetadata { Name = "unsubscribeCode" },
                new FieldMetadata { Name = "lastSeen", IsComplex = true },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(SteamAccountTypeQueryBuilder) },
                new FieldMetadata { Name = "rosh", IsComplex = true, QueryBuilderType = typeof(RoshCaptainJackIdentityStatDifficultyTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "CaptainJackIdentityPrivateProfileType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithCaptainJackIdentityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("captainJackIdentityId", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptCaptainJackIdentityId()
        {
            return ExceptField("captainJackIdentityId");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("email", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptEmail()
        {
            return ExceptField("email");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithTwitter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("twitter", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptTwitter()
        {
            return ExceptField("twitter");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithFacebook(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("facebook", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptFacebook()
        {
            return ExceptField("facebook");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithTwitch(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("twitch", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptTwitch()
        {
            return ExceptField("twitch");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithYouTube(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("youTube", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptYouTube()
        {
            return ExceptField("youTube");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithPremiumEndDate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("premiumEndDate", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptPremiumEndDate()
        {
            return ExceptField("premiumEndDate");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithIsAdmin(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isAdmin", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptIsAdmin()
        {
            return ExceptField("isAdmin");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithFeedLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("feedLevel", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptFeedLevel()
        {
            return ExceptField("feedLevel");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithEmailLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailLevel", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptEmailLevel()
        {
            return ExceptField("emailLevel");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithDailyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("dailyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptDailyEmail()
        {
            return ExceptField("dailyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithWeeklyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("weeklyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptWeeklyEmail()
        {
            return ExceptField("weeklyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithMonthlyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("monthlyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptMonthlyEmail()
        {
            return ExceptField("monthlyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithProCircuitFeedLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("proCircuitFeedLevel", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptProCircuitFeedLevel()
        {
            return ExceptField("proCircuitFeedLevel");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithProCircuitEmailLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("proCircuitEmailLevel", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptProCircuitEmailLevel()
        {
            return ExceptField("proCircuitEmailLevel");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithThemeType(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("themeType", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptThemeType()
        {
            return ExceptField("themeType");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLanguageId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("languageId", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLanguageId()
        {
            return ExceptField("languageId");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithEmailValidationCode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailValidationCode", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptEmailValidationCode()
        {
            return ExceptField("emailValidationCode");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithIsEmailValidated(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isEmailValidated", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptIsEmailValidated()
        {
            return ExceptField("isEmailValidated");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithEmailHour(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailHour", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptEmailHour()
        {
            return ExceptField("emailHour");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastReadFeedTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastReadFeedTime", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastReadFeedTime()
        {
            return ExceptField("lastReadFeedTime");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastDailyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastDailyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastDailyEmail()
        {
            return ExceptField("lastDailyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastWeeklyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastWeeklyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastWeeklyEmail()
        {
            return ExceptField("lastWeeklyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastMonthlyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastMonthlyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastMonthlyEmail()
        {
            return ExceptField("lastMonthlyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastLeagueDailyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastLeagueDailyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastLeagueDailyEmail()
        {
            return ExceptField("lastLeagueDailyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastTeamDailyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastTeamDailyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastTeamDailyEmail()
        {
            return ExceptField("lastTeamDailyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastProCircuitDailyEmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastProCircuitDailyEmail", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastProCircuitDailyEmail()
        {
            return ExceptField("lastProCircuitDailyEmail");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithUnsubscribeCode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unsubscribeCode", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptUnsubscribeCode()
        {
            return ExceptField("unsubscribeCode");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithLastSeen(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastSeen", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptLastSeen()
        {
            return ExceptField("lastSeen");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithSteamAccount(SteamAccountTypeQueryBuilder steamAccountTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, steamAccountTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder WithRosh(RoshCaptainJackIdentityStatDifficultyTypeQueryBuilder roshCaptainJackIdentityStatDifficultyTypeQueryBuilder, QueryBuilderParameter<RoshMatchesRequestType> request = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (request != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "request", ArgumentValue = request} );

            return WithObjectField("rosh", alias, roshCaptainJackIdentityStatDifficultyTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public CaptainJackIdentityPrivateProfileTypeQueryBuilder ExceptRosh()
        {
            return ExceptField("rosh");
        }
    }
}
